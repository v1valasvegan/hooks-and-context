{"version":3,"sources":["common/constants.js","Styles.js","components/Error.js","components/Loader.js","common/context.js","components/PostTableRow.js","components/PostTable.js","components/Posts.js","hooks/useLoader.js","components/UserProvider.js","components/PostEditor.js","components/PostProvider.js","components/Add.js","App.js","index.js"],"names":["BASE_URL","containerStyles","padding","majorScale","display","flexDirection","alignItems","justifyContent","formStyles","minWidth","boxShadow","borderRadius","Error","error","Pane","style","message","type","onClick","window","location","reload","Loader","height","Spinner","UserContext","createContext","PostContext","PostTableRow","post","onDeleteClick","useContext","users","userId","id","title","name","find","user","Table","Row","TextCell","Cell","flexBasis","flexGrow","IconButton","appearance","icon","color","is","Link","to","PostTable","posts","border","Head","TextHeaderCell","Body","map","key","Posts","useState","dialogId","setDialogId","isLoading","setLoading","requestDelete","a","axios","delete","toaster","success","duration","danger","Button","marginBottom","iconBefore","Dialog","isShown","Boolean","intent","onCloseComplete","confirmLabel","onConfirm","useLoader","path","data","saveData","loading","setError","load","useCallback","get","respData","useEffect","UserProvider","children","userContext","Provider","value","length","PostEditor","useParams","loadingPosts","setPostsLoading","errorPosts","setErrorPosts","loadingUsers","errorUsers","formState","setFormState","handleChange","input","e","target","editPost","preventDefault","put","body","JSON","stringify","headers","onSubmit","Select","onInput","required","defaultValue","disabled","TextInput","onChange","placeholder","Textarea","PostProvider","postContext","Add","addPost","App","exact","from","component","ReactDOM","render","document","getElementById"],"mappings":"2QAEeA,EAFE,uCCEJC,EAAkB,CAC7BC,QAASC,YAAW,GACpBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAGLC,EAAa,CACxBJ,QAAS,OACTC,cAAe,SACfC,WAAY,aACZJ,QAAS,OACTO,SAAU,QACVC,UAAW,sBACXC,aAAc,OCbD,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOd,GACX,6DACA,oCAAMY,QAAN,IAAMA,OAAN,EAAMA,EAAOG,SACb,4BAAQC,KAAK,SAASC,QAAS,kBAAMC,OAAOC,SAASC,WAArD,uB,aCNS,SAASC,IACtB,OACE,kBAACR,EAAA,EAAD,CAAMV,QAAQ,OAAOE,WAAW,SAASC,eAAe,SAASgB,OAAQ,KACvE,kBAACC,EAAA,EAAD,O,sBCJOC,EAAcC,0BAEdC,EAAcD,0BCCZ,SAASE,EAAT,GAAgD,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,cAAiB,EAC5CC,qBAAWN,GAApBO,EADqD,oBAEpDC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,GAAIC,EAAUN,EAAVM,MACZC,GAASJ,EAAMK,MAAK,SAACC,GAAD,OAAUA,EAAKJ,KAAOD,MAAW,IAArDG,KAER,OACE,kBAACG,EAAA,EAAMC,IAAP,KACE,kBAACD,EAAA,EAAME,SAAP,KAAiBN,GACjB,kBAACI,EAAA,EAAME,SAAP,KAAiBL,GACjB,kBAACG,EAAA,EAAMG,KAAP,CACEtC,QAAQ,OACRG,eAAe,eACfoC,UAAWxC,YAAW,IACtByC,SAAU,GAEV,kBAACC,EAAA,EAAD,CACEC,WAAW,UACXC,KAAK,SACLC,MAAM,QACN9B,QAAS,kBAAMY,EAAcI,MAE/B,kBAACW,EAAA,EAAD,CAAYC,WAAW,UAAUC,KAAK,OAAOC,MAAM,QAAQC,GAAIC,IAAMC,GAAE,iBAAYjB,OCtB5E,SAASkB,EAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,MAAOvB,EAAiB,EAAjBA,cACzC,OACE,kBAACS,EAAA,EAAD,CAAOe,QAAM,GACX,kBAACf,EAAA,EAAMgB,KAAP,KACE,kBAAChB,EAAA,EAAMiB,eAAP,cACA,kBAACjB,EAAA,EAAMiB,eAAP,aACA,kBAACjB,EAAA,EAAMiB,eAAP,CAAsBb,UAAWxC,YAAW,IAAKyC,SAAU,GAA3D,YAIF,kBAACL,EAAA,EAAMkB,KAAP,YACGJ,QADH,IACGA,OADH,EACGA,EAAOK,KAAI,SAAC7B,GAAD,OACV,kBAACD,EAAD,CAAc+B,IAAK9B,EAAKK,GAAIL,KAAMA,EAAMC,cAAeA,SCHlD,SAAS8B,IAAS,IAAD,EACEC,mBAAS,MADX,mBACvBC,EADuB,KACbC,EADa,OAEwBhC,qBAAWJ,GAFnC,mBAEvB0B,EAFuB,KAEhBW,EAFgB,KAELC,EAFK,KAEO5C,EAFP,KAEeR,EAFf,KAIxBqD,EAAa,uCAAG,WAAOhC,GAAP,SAAAiC,EAAA,6DACpBF,GAAW,GADS,SAGlBF,EAAY,MAHM,SAIZK,IAAMC,OAAN,UAAgBrE,EAAhB,kBAAkCkC,IAJtB,OAKlBb,IACAiD,IAAQC,QAAQ,eAAgB,CAAEC,SAAU,IAN1B,gDAQlBT,EAAY,MACZO,IAAQG,OAAO,uBAAwB,CAAED,SAAU,IATjC,yDAAH,sDAanB,OAAI3D,EAAc,kBAACD,EAAD,CAAOC,MAAOA,IAC5BmD,EAAkB,kBAAC1C,EAAD,MAGpB,kBAACR,EAAA,EAAD,CAAMC,MAAOd,GACX,kBAACyE,EAAA,EAAD,CACEC,aAAcxE,YAAW,GACzB2C,WAAW,UACX8B,WAAW,MACX3B,GAAIC,IACJC,GAAG,cALL,YAUA,kBAACC,EAAD,CAAWC,MAAOA,EAAOvB,cAAeiC,IAExC,kBAACc,EAAA,EAAD,CACEC,QAASC,QAAQjB,GACjB3B,MAAM,SACN6C,OAAO,SACPC,gBAAiB,kBAAMlB,EAAY,OACnCmB,aAAa,cACbC,UAAW,kBAAMjB,EAAcJ,KANjC,+CC3CS,SAASsB,EAAUC,GAAO,IAAD,EACbxB,mBAAS,IADI,mBAC/ByB,EAD+B,KACzBC,EADyB,OAER1B,oBAAS,GAFD,mBAE/B2B,EAF+B,KAEtBvB,EAFsB,OAGZJ,mBAAS,MAHG,mBAG/BhD,EAH+B,KAGxB4E,EAHwB,KAKhCC,EAAOC,sBAAW,sBAAC,8BAAAxB,EAAA,6DACvBF,GAAW,GADY,kBAGYG,IAAMwB,IAAN,UAAa5F,EAAb,YAAyBqF,IAHrC,gBAGPQ,EAHO,EAGbP,KACRC,EAASM,GACT5B,GAAW,GALU,kDAOrBwB,EAAS,EAAD,IACRxB,GAAW,GARU,0DAUtB,CAACoB,IAKJ,OAHAS,qBAAU,WACRJ,MACC,CAACA,IACG,CAACJ,EAAME,EAASvB,EAAYyB,EAAM7E,EAAO4E,GCnBnC,SAASM,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAC/BC,EAAcb,EAAU,SADmB,cAExBa,EAFwB,GAE1CjE,EAF0C,KAEnCwD,EAFmC,KAGjD,OACE,kBAAC/D,EAAYyE,SAAb,CAAsBC,MAAOF,GAC1BT,GAA4B,IAAjBxD,EAAMoE,OAAe,kBAAC9E,EAAD,MAAa0E,G,8CCIrC,SAASK,IAAc,IAC5BnE,EAAOoE,cAAPpE,GAD2B,EAEwCkD,EAAU,SAAD,OAAUlD,IAF3D,mBAE5BL,EAF4B,KAEtB0E,EAFsB,KAERC,EAFQ,KAEWC,EAFX,KAEuBC,EAFvB,OAGW3E,qBAAWN,GAHtB,mBAG5BO,EAH4B,KAGrB2E,EAHqB,KAGHC,EAHG,OAID/C,mBAAS,eAAKhC,IAJb,mBAI5BgF,EAJ4B,KAIjBC,EAJiB,KAMnChB,qBAAU,kBAAMgB,EAAajF,KAAO,CAACA,IAGrC,IAAMkF,EAAe,SAACC,GAAD,OAAW,SAACC,GAC/BH,EAAa,eAAKD,EAAN,eAAkBG,EAAQC,EAAEC,OAAOf,WAG3CgB,EAAQ,uCAAG,WAAOF,GAAP,SAAA9C,EAAA,6DACf8C,EAAEG,iBACFZ,GAAgB,GAFD,kBAIPpC,IAAMiD,IAAN,UAAarH,EAAb,kBAA+BkC,GAAM,CACzCoF,KAAMC,KAAKC,UAAU,CACnBrF,MAAO0E,EAAU1E,MACjBmF,KAAMT,EAAUS,KAChBrF,OAAQ4E,EAAU5E,OAClBC,OAEFuF,QAAS,CAAE,eAAgB,qCAXhB,OAabnD,IAAQC,QAAQ,0BAA2B,CAAEC,SAAU,IAb1C,gDAebkC,GAAc,GAfD,QAiBfF,GAAgB,GAjBD,yDAAH,sDAoBd,OAAID,GAAgBI,EAAqB,kBAACrF,EAAD,MACrCmF,GAAcG,EAAmB,kBAAChG,EAAD,MAGnC,kBAACE,EAAA,EAAD,CAAMC,MAAOd,GACX,kBAACyE,EAAA,EAAD,CACEC,aAAcxE,YAAW,GACzB2C,WAAW,UACX8B,WAAW,OACX3B,GAAIC,IACJC,GAAG,UALL,QASA,0BACEpC,MAAOP,EACPkH,SAAUP,GAEV,kBAACQ,EAAA,EAAD,CAAQC,QAASb,EAAa,UAAWc,UAAQ,EAACC,aAAcjB,EAAU5E,OAAQ0C,aAAcxE,YAAW,IACzG,4BAAQgG,MAAM,cAAc4B,UAAQ,GAApC,qBAGC/F,GACIA,EAAM0B,KAAI,SAACpB,GAAD,OACX,4BAAQ6D,MAAO7D,EAAKJ,GAAIyB,IAAKrB,EAAKJ,IAC/BI,EAAKF,UAId,kBAAC4F,EAAA,EAAD,CACErD,aAAcxE,YAAW,GACzB8H,SAAUlB,EAAa,SACvBe,aAAcjB,EAAU1E,MACxB+F,YAAY,iBACZL,UAAQ,IAEV,kBAACM,EAAA,EAAD,CACExD,aAAcxE,YAAW,GACzB8H,SAAUlB,EAAa,QACvBe,aAAcjB,EAAUS,KACxBY,YAAY,sBAEd,kBAACxD,EAAA,EAAD,CAAQzD,KAAK,UAAb,UCpFO,SAASmH,EAAT,GAAqC,IAAbpC,EAAY,EAAZA,SAC/BqC,EAAcjD,EAAU,SADmB,cAExBiD,EAFwB,GAE1ChF,EAF0C,KAEnCmC,EAFmC,KAGjD,OACE,kBAAC7D,EAAYuE,SAAb,CAAsBC,MAAOkC,GAC1B7C,GAA4B,IAAjBnC,EAAM+C,OAAe,kBAAC9E,EAAD,MAAa0E,GCErC,SAASsC,IAAO,IAAD,EACkBvG,qBAAWN,GAD7B,mBACrBO,EADqB,KACd2E,EADc,KACIC,EADJ,OAE2C7E,qBAAWJ,GAFtD,mBAEnB4E,EAFmB,KAELC,EAFK,KAEcC,EAFd,KAE0BC,EAF1B,OAGM7C,mBAAS,IAHf,mBAGrBgD,EAHqB,KAGVC,EAHU,KAKtBC,EAAe,SAACC,GAAD,OAAW,SAACC,GAC/BH,EAAa,eAAKD,EAAN,eAAkBG,EAAQC,EAAEC,OAAOf,WAG3CoC,EAAO,uCAAG,WAAOtB,GAAP,SAAA9C,EAAA,6DACd8C,EAAEG,iBACFZ,GAAgB,GAFF,kBAINpC,IAAMvC,KAAN,UAAc7B,EAAd,WAAiC,CACrCsH,KAAMC,KAAKC,UAAU,CACnBrF,MAAO0E,EAAU1E,MACjBmF,KAAMT,EAAUS,KAChBrF,OAAQ4E,EAAU5E,SAEpBwF,QAAS,CAAE,eAAgB,qCAVjB,OAYZnD,IAAQC,QAAQ,aAAc,CAAEC,SAAU,IAZ9B,gDAcZkC,GAAc,GAdF,QAgBdF,GAAgB,GAhBF,yDAAH,sDAmBb,OAAIG,GAAgBJ,EAAqB,kBAACjF,EAAD,MACrCsF,GAAcH,EAAmB,kBAAC7F,EAAD,MAGnC,kBAACE,EAAA,EAAD,CAAMC,MAAOd,GACX,kBAACyE,EAAA,EAAD,CACEC,aAAcxE,YAAW,GACzB2C,WAAW,UACX8B,WAAW,aACX3B,GAAIC,IACJC,GAAG,UALL,QASA,0BACEpC,MAAOP,EACPkH,SAAUa,GAEV,kBAACZ,EAAA,EAAD,CAAQC,QAASb,EAAa,UAAWc,UAAQ,EAACC,aAAa,cAAcnD,aAAcxE,YAAW,IACpG,4BAAQgG,MAAM,cAAc4B,UAAQ,GAApC,qBAGC/F,GACIA,EAAM0B,KAAI,SAACpB,GAAD,OACX,4BAAQ6D,MAAO7D,EAAKJ,GAAIyB,IAAKrB,EAAKJ,IAC/BI,EAAKF,UAId,kBAAC4F,EAAA,EAAD,CACErD,aAAcxE,YAAW,GACzB8H,SAAUlB,EAAa,SACvBe,aAAcjB,EAAU1E,MACxB+F,YAAY,iBACZL,UAAQ,IAEV,kBAACM,EAAA,EAAD,CACExD,aAAcxE,YAAW,GACzB8H,SAAUlB,EAAa,QACvBe,aAAcjB,EAAUS,KACxBY,YAAY,sBAEd,kBAACxD,EAAA,EAAD,CAAQzD,KAAK,SAAS+D,OAAO,WAA7B,UCvDOwD,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,kBAACJ,EAAD,KACE,kBAACrC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU0C,OAAK,EAACC,KAAK,IAAIvF,GAAG,WAC5B,kBAAC,IAAD,CAAOsF,OAAK,EAACpD,KAAK,SAASsD,UAAW/E,IACtC,kBAAC,IAAD,CAAOyB,KAAK,aAAasD,UAAWL,IACpC,kBAAC,IAAD,CAAOjD,KAAK,aAAasD,UAAWtC,SCfhDuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.081f57dc.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nexport default BASE_URL;\n","import { majorScale } from 'evergreen-ui';\n\nexport const containerStyles = {\n  padding: majorScale(5),\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\nexport const formStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  padding: '10px',\n  minWidth: '500px',\n  boxShadow: '0 0 5px 5px #c3c3c3',\n  borderRadius: '5px',\n};\n","import React from 'react';\nimport { Pane } from 'evergreen-ui';\nimport { containerStyles } from '../Styles';\n\nexport default function Error({ error }) {\n  return (\n    <Pane style={containerStyles}>\n      <span>Oops, something went wrong.</span>\n      <div>{error?.message}</div>\n      <button type=\"button\" onClick={() => window.location.reload()}>Try to reload page</button>\n    </Pane>\n  );\n}\n","import React from 'react';\nimport { Pane, Spinner } from 'evergreen-ui';\n\nexport default function Loader() {\n  return (\n    <Pane display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={400}>\n      <Spinner />\n    </Pane>\n  );\n}\n","import { createContext } from 'react';\n\nexport const UserContext = createContext();\n\nexport const PostContext = createContext();\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table, majorScale, IconButton } from 'evergreen-ui';\nimport { UserContext } from '../common/context';\n\nexport default function PostTableRow({ post, onDeleteClick }) {\n  const [users] = useContext(UserContext);\n  const { userId, id, title } = post;\n  const { name } = users.find((user) => user.id === userId) || {};\n\n  return (\n    <Table.Row>\n      <Table.TextCell>{title}</Table.TextCell>\n      <Table.TextCell>{name}</Table.TextCell>\n      <Table.Cell\n        display=\"flex\"\n        justifyContent=\"space-around\"\n        flexBasis={majorScale(10)}\n        flexGrow={0}\n      >\n        <IconButton\n          appearance=\"minimal\"\n          icon=\"delete\"\n          color=\"muted\"\n          onClick={() => onDeleteClick(id)}\n        />\n        <IconButton appearance=\"minimal\" icon=\"edit\" color=\"muted\" is={Link} to={`/posts/${id}`} />\n      </Table.Cell>\n    </Table.Row>\n  );\n}\n","import React from 'react';\nimport { Table, majorScale } from 'evergreen-ui';\nimport PostTableRow from './PostTableRow';\n\nexport default function PostTable({ posts, onDeleteClick }) {\n  return (\n    <Table border>\n      <Table.Head>\n        <Table.TextHeaderCell>Title</Table.TextHeaderCell>\n        <Table.TextHeaderCell>User</Table.TextHeaderCell>\n        <Table.TextHeaderCell flexBasis={majorScale(10)} flexGrow={0}>\n          Actions\n        </Table.TextHeaderCell>\n      </Table.Head>\n      <Table.Body>\n        {posts?.map((post) => (\n          <PostTableRow key={post.id} post={post} onDeleteClick={onDeleteClick} />\n        ))}\n      </Table.Body>\n    </Table>\n  );\n}\n","import axios from 'axios';\nimport {\n  Button, Dialog, majorScale, Pane, toaster,\n} from 'evergreen-ui';\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport BASE_URL from '../common/constants';\nimport { containerStyles } from '../Styles';\nimport Error from './Error';\nimport Loader from './Loader';\nimport PostTable from './PostTable';\nimport { PostContext } from '../common/context';\n\nexport default function Posts() {\n  const [dialogId, setDialogId] = useState(null);\n  const [posts, isLoading, setLoading, reload, error] = useContext(PostContext);\n\n  const requestDelete = async (id) => {\n    setLoading(true);\n    try {\n      setDialogId(null);\n      await axios.delete(`${BASE_URL}/posts/${id}`);\n      reload();\n      toaster.success('Post deleted', { duration: 2 });\n    } catch {\n      setDialogId(null);\n      toaster.danger('Something went wrong', { duration: 2 });\n    }\n  };\n\n  if (error) return <Error error={error} />;\n  if (isLoading) return <Loader />;\n\n  return (\n    <Pane style={containerStyles}>\n      <Button\n        marginBottom={majorScale(2)}\n        appearance=\"primary\"\n        iconBefore=\"add\"\n        is={Link}\n        to=\"/posts/new\"\n      >\n        Add task\n      </Button>\n\n      <PostTable posts={posts} onDeleteClick={setDialogId} />\n\n      <Dialog\n        isShown={Boolean(dialogId)}\n        title=\"Delete\"\n        intent=\"danger\"\n        onCloseComplete={() => setDialogId(null)}\n        confirmLabel=\"Yes, delete\"\n        onConfirm={() => requestDelete(dialogId)}\n      >\n        Are you sure you want to delete this post?\n      </Dialog>\n    </Pane>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState, useCallback } from 'react';\nimport BASE_URL from '../common/constants';\n\nexport default function useLoader(path) {\n  const [data, saveData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const load = useCallback(async () => {\n    setLoading(true);\n    try {\n      const { data: respData } = await axios.get(`${BASE_URL}/${path}`);\n      saveData(respData);\n      setLoading(false);\n    } catch (err) {\n      setError(err);\n      setLoading(false);\n    }\n  }, [path]);\n\n  useEffect(() => {\n    load();\n  }, [load]);\n  return [data, loading, setLoading, load, error, setError];\n}\n","import React from 'react';\nimport useLoader from '../hooks/useLoader';\nimport { UserContext } from '../common/context';\nimport Loader from './Loader';\n\nexport default function UserProvider({ children }) {\n  const userContext = useLoader('users');\n  const [users, loading] = userContext;\n  return (\n    <UserContext.Provider value={userContext}>\n      {loading || users.length === 0 ? <Loader /> : children}\n    </UserContext.Provider>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport {\n  Pane, Button, Select, TextInput, Textarea, toaster, majorScale,\n} from 'evergreen-ui';\nimport useLoader from '../hooks/useLoader';\nimport { containerStyles, formStyles } from '../Styles';\nimport Loader from './Loader';\nimport Error from './Error';\nimport BASE_URL from '../common/constants';\nimport { UserContext } from '../common/context';\n\nexport default function PostEditor() {\n  const { id } = useParams();\n  const [post, loadingPosts, setPostsLoading, , errorPosts, setErrorPosts] = useLoader(`posts/${id}`);\n  const [users, loadingUsers, , , errorUsers] = useContext(UserContext);\n  const [formState, setFormState] = useState({ ...post });\n\n  useEffect(() => setFormState(post), [post]);\n\n\n  const handleChange = (input) => (e) => {\n    setFormState({ ...formState, [input]: e.target.value });\n  };\n\n  const editPost = async (e) => {\n    e.preventDefault();\n    setPostsLoading(true);\n    try {\n      await axios.put(`${BASE_URL}/posts/${id}`, {\n        body: JSON.stringify({\n          title: formState.title,\n          body: formState.body,\n          userId: formState.userId,\n          id,\n        }),\n        headers: { 'Content-type': 'application/json; charset=UTF-8' },\n      });\n      toaster.success('Changes have been saved', { duration: 2 });\n    } catch {\n      setErrorPosts(true);\n    }\n    setPostsLoading(false);\n  };\n\n  if (loadingPosts || loadingUsers) return <Loader />;\n  if (errorPosts || errorUsers) return <Error />;\n\n  return (\n    <Pane style={containerStyles}>\n      <Button\n        marginBottom={majorScale(2)}\n        appearance=\"primary\"\n        iconBefore=\"back\"\n        is={Link}\n        to=\"/posts\"\n      >\n          Back\n      </Button>\n      <form\n        style={formStyles}\n        onSubmit={editPost}\n      >\n        <Select onInput={handleChange('userId')} required defaultValue={formState.userId} marginBottom={majorScale(2)}>\n          <option value=\"placeholder\" disabled>\n            -- Select user --\n          </option>\n          {users\n            && users.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n        </Select>\n        <TextInput\n          marginBottom={majorScale(2)}\n          onChange={handleChange('title')}\n          defaultValue={formState.title}\n          placeholder=\"Add title here\"\n          required\n        />\n        <Textarea\n          marginBottom={majorScale(2)}\n          onChange={handleChange('body')}\n          defaultValue={formState.body}\n          placeholder=\"Add yor text here\"\n        />\n        <Button type=\"submit\">Save</Button>\n      </form>\n    </Pane>\n  );\n}\n","import React from 'react';\nimport useLoader from '../hooks/useLoader';\nimport { PostContext } from '../common/context';\nimport Loader from './Loader';\n\nexport default function PostProvider({ children }) {\n  const postContext = useLoader('posts');\n  const [posts, loading] = postContext;\n  return (\n    <PostContext.Provider value={postContext}>\n      {loading || posts.length === 0 ? <Loader /> : children}\n    </PostContext.Provider>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {\n  Pane, Button, Select, TextInput, Textarea, toaster, majorScale,\n} from 'evergreen-ui';\nimport { containerStyles, formStyles } from '../Styles';\nimport Loader from './Loader';\nimport Error from './Error';\nimport BASE_URL from '../common/constants';\nimport { UserContext, PostContext } from '../common/context';\n\nexport default function Add() {\n  const [users, loadingUsers, , , errorUsers] = useContext(UserContext);\n  const [, loadingPosts, setPostsLoading, , errorPosts, setErrorPosts] = useContext(PostContext);\n  const [formState, setFormState] = useState({});\n\n  const handleChange = (input) => (e) => {\n    setFormState({ ...formState, [input]: e.target.value });\n  };\n\n  const addPost = async (e) => {\n    e.preventDefault();\n    setPostsLoading(true);\n    try {\n      await axios.post(`${BASE_URL}/posts/`, {\n        body: JSON.stringify({\n          title: formState.title,\n          body: formState.body,\n          userId: formState.userId,\n        }),\n        headers: { 'Content-type': 'application/json; charset=UTF-8' },\n      });\n      toaster.success('Post added', { duration: 2 });\n    } catch {\n      setErrorPosts(true);\n    }\n    setPostsLoading(false);\n  };\n\n  if (loadingUsers || loadingPosts) return <Loader />;\n  if (errorUsers || errorPosts) return <Error />;\n\n  return (\n    <Pane style={containerStyles}>\n      <Button\n        marginBottom={majorScale(2)}\n        appearance=\"primary\"\n        iconBefore=\"arrow-left\"\n        is={Link}\n        to=\"/posts\"\n      >\n          Back\n      </Button>\n      <form\n        style={formStyles}\n        onSubmit={addPost}\n      >\n        <Select onInput={handleChange('userId')} required defaultValue=\"placeholder\" marginBottom={majorScale(1)}>\n          <option value=\"placeholder\" disabled>\n            -- Select user --\n          </option>\n          {users\n            && users.map((user) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n        </Select>\n        <TextInput\n          marginBottom={majorScale(1)}\n          onChange={handleChange('title')}\n          defaultValue={formState.title}\n          placeholder=\"Add title here\"\n          required\n        />\n        <Textarea\n          marginBottom={majorScale(2)}\n          onChange={handleChange('body')}\n          defaultValue={formState.body}\n          placeholder=\"Add yor text here\"\n        />\n        <Button type=\"submit\" intent=\"success\">Save</Button>\n      </form>\n    </Pane>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router, Route, Redirect, Switch,\n} from 'react-router-dom';\nimport Posts from './components/Posts';\nimport UserProvider from './components/UserProvider';\nimport PostEditor from './components/PostEditor';\nimport PostProvider from './components/PostProvider';\nimport Add from './components/Add';\n\nfunction App() {\n  return (\n    <Router>\n      <PostProvider>\n        <UserProvider>\n          <Switch>\n            <Redirect exact from=\"/\" to=\"/posts\" />\n            <Route exact path=\"/posts\" component={Posts} />\n            <Route path=\"/posts/new\" component={Add} />\n            <Route path=\"/posts/:id\" component={PostEditor} />\n          </Switch>\n        </UserProvider>\n      </PostProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}